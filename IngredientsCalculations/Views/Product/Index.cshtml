@using PagedList;
@model IEnumerable<IngredientsCalculations.Models.Product>

@{
    ViewData["Title"] = "Index";

}
<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div>
    <label for="filter">Filter by Product Name:</label>
    <input type="text" id="filter" oninput="filterTable()" />
</div>
<table class="table" id="productTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.productName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BaseCurrency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BaseCurrency)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.productName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.weight)
                </td>
                <td>
                    @(ViewBag.BaseCurrency != null ? (ViewBag.BaseCurrency.ExchangeRate * item.BasePrice).ToString("N2") : item.BasePrice)
                </td>
                <td>
                    @(ViewBag.BaseCurrency != null ? ViewBag.BaseCurrency.Code : "N/A")
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>

   

</table>

<nav aria-label="Page navigation">
    <ul class="pagination">

        @if (ViewBag.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo; Previous</span>
                </a>
            </li>
        }

        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
            </li>
        }

        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)" aria-label="Next">
                    <span aria-hidden="true">Next &raquo;</span>
                </a>
            </li>
        }

    </ul>
</nav>


<script>
    function filterTable() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("filter");
        filter = input.value.toUpperCase();
        table = document.getElementById("productTable");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0]; // Assuming the product name is in the first column
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
