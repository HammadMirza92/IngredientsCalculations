@using IngredientsCalculations.Enums;
@model IngredientsCalculations.Models.ProductIngredients

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>ProductIngredients</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="ProductId" class="control-label"></label>
                <select asp-for="ProductId" class="form-control" asp-items="new SelectList(ViewBag.Products, nameof(Product.Id), nameof(Product.productName))"></select>
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="IngredientId" class="control-label"></label>
                <select asp-for="IngredientId" class="form-control" asp-items="new SelectList(ViewBag.Ingredients, nameof(Ingredients.Id), nameof(Ingredients.ingredientName))"></select>
                <span asp-validation-for="IngredientId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Scale" class="control-label"></label>
                <select asp-for="Scale" class="form-control" asp-items="Html.GetEnumSelectList<scaleType>()"></select>
                <span asp-validation-for="Scale" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="weight" class="control-label"></label>
                <input asp-for="weight" class="form-control" />
                <span asp-validation-for="weight" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
